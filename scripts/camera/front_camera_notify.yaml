sequence:
  # I want to know if we've anything interesting, it'll change what we do
  - service_template: >-
      {#- Set the scene - extract the things we care about, and prepare some defaults -#}
      {%- set totalPeople = state_attr('image_processing.doods_front_camera_snapshot','summary').person|default(0) -%}
      {%- set totalCars = state_attr('image_processing.doods_front_camera_snapshot','summary').car|default(0) -%}
      {%- set totalTrucks = state_attr('image_processing.doods_front_camera_snapshot','summary').truck|default(0) -%}
      {%- set totalMotorcycles = state_attr('image_processing.doods_front_camera_snapshot','summary').motorcycle|default(0) -%}
      {%- set totalBicycles = state_attr('image_processing.doods_front_camera_snapshot','summary').bicycle|default(0) -%}
      {%- set parkedCars = 0 -%}
      {%- set otherCars = 0 -%}
      {%- set parkedTrucks = 0 -%}
      {%- set otherTrucks = 0 -%}
      {%- set relevantPeople = 0 -%}
      {%- set otherPeople = 0 -%}
      {%- macro isParked(box) -%}

      {{- True if (
          ((0.720 < box[0] < 0.754) and (0.390 < box[1] < 0.460) and (0.820 < box[2] < 0.850) and (0.500 < box[3] < 0.580))
           or
          ((0.740 < box[0] < 0.766) and (0.318 < box[1] < 0.400) and (0.830 < box[2] < 0.854) and (0.380 < box[3] < 0.550))
        ) else X -}}
      {%- endmacro -%}

      {#- Split out parked cars from the rest - don't care about the parked ones -#}
      {%- if totalCars > 0 -%}
        {%- macro getParkedCars() -%}
        {%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').car -%}{{- "X" if isParked(state.box) -}}{%- endfor -%}
        {%- endmacro -%}
        {%- set parkedCars = getParkedCars()|length -%}
        {%- set otherCars = state_attr('image_processing.doods_front_camera_snapshot','summary').car - parkedCars -%}
      {%- endif -%}

      {%- if totalTrucks > 0 -%}
        {%- macro getParkedTrucks() -%}
        {%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').truck -%}{{- "X" if isParked(state.box) -}}{%- endfor -%}
        {%- endmacro -%}
        {%- set parkedTrucks = getParkedTrucks()|length -%}
        {%- set otherTrucks = state_attr('image_processing.doods_front_camera_snapshot','summary').truck - parkedTrucks -%}
      {%- endif -%}

      {%- set parkedVehicles = parkedCars+parkedTrucks -%}
      {%- set otherVehicles = otherCars+otherTrucks -%}

      {#- Split out people on the path/in the garden, from those on the road -#}
      {%- if totalPeople > 0 -%}
        {%- macro personOnPath(box) -%}
        {{- True if (
            ( 0.840 < box[2] )
          ) else X -}}
        {%- endmacro -%}
        {%- macro getPeopleOnPath() -%}
        {%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').person -%}{{- "X" if personOnPath(state.box) -}}{%- endfor -%}
        {%- endmacro -%}
        {%- set relevantPeople = getPeopleOnPath()|length -%}
        {%- set otherPeople = state_attr('image_processing.doods_front_camera_snapshot','summary').person - relevantPeople -%}
      {%- endif -%}

      {#- total up the things into different categories -#}
      {%- set importantThings = otherCars + otherTrucks + totalMotorcycles + totalBicycles + relevantPeople -%}
      input_boolean.turn_{{ "on" if importantThings > 0 else "off" }} 
    entity_id: input_boolean.front_camera_motion_interesting
  - service_template: >-
      {%- if is_state('input_boolean.front_camera_motion_interesting','on') and is_state('input_boolean.stream_front_camera_motion','on') -%} 
        input_boolean.turn_on
      {%- else -%}
        input_boolean.turn_off
      {%- endif -%}
    entity_id: input_boolean.stream_camera
  - service: notify.discord
    data_template:
      # Coordinates from Doods, which are from Tensorflow, are in the order of ymin, ymax, xmin, xmax
      message: >-
        {#- Set the scene - extract the things we care about, and prepare some defaults -#}
        {%- set totalPeople = state_attr('image_processing.doods_front_camera_snapshot','summary').person|default(0) -%}
        {%- set totalCars = state_attr('image_processing.doods_front_camera_snapshot','summary').car|default(0) -%}
        {%- set totalTrucks = state_attr('image_processing.doods_front_camera_snapshot','summary').truck|default(0) -%}
        {%- set totalMotorcycles = state_attr('image_processing.doods_front_camera_snapshot','summary').motorcycle|default(0) -%}
        {%- set totalBicycles = state_attr('image_processing.doods_front_camera_snapshot','summary').bicycle|default(0) -%}
        {%- set parkedCars = 0 -%}
        {%- set otherCars = 0 -%}
        {%- set parkedTrucks = 0 -%}
        {%- set otherTrucks = 0 -%}
        {%- set relevantPeople = 0 -%}
        {%- set otherPeople = 0 -%}
        {%- macro isParked(box) -%}
        {{- True if (
            ((0.720 < box[0] < 0.754) and (0.390 < box[1] < 0.460) and (0.820 < box[2] < 0.850) and (0.500 < box[3] < 0.580))
             or
            ((0.740 < box[0] < 0.766) and (0.318 < box[1] < 0.400) and (0.830 < box[2] < 0.854) and (0.380 < box[3] < 0.550))
          ) else X -}}
        {%- endmacro -%}

        {#- Split out parked cars from the rest - don't care about the parked ones -#}
        {%- if totalCars > 0 -%}
          {%- macro getParkedCars() -%}
          {%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').car -%}{{- "X" if isParked(state.box) -}}{%- endfor -%}
          {%- endmacro -%}
          {%- set parkedCars = getParkedCars()|length -%}
          {%- set otherCars = state_attr('image_processing.doods_front_camera_snapshot','summary').car - parkedCars -%}
        {%- endif -%}

        {%- if totalTrucks > 0 -%}
          {%- macro getParkedTrucks() -%}
          {%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').truck -%}{{- "X" if isParked(state.box) -}}{%- endfor -%}
          {%- endmacro -%}
          {%- set parkedTrucks = getParkedTrucks()|length -%}
          {%- set otherTrucks = state_attr('image_processing.doods_front_camera_snapshot','summary').truck - parkedTrucks -%}
        {%- endif -%}

        {%- set parkedVehicles = parkedCars+parkedTrucks -%}
        {%- set otherVehicles = otherCars+otherTrucks -%}

        {#- Split out people on the path/in the garden, from those on the road -#}
        {%- if totalPeople > 0 -%}
          {%- macro personOnPath(box) -%}
          {{- True if (
              ( 0.840 < box[2] )
            ) else X -}}
          {%- endmacro -%}
          {%- macro getPeopleOnPath() -%}
          {%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').person -%}{{- "X" if personOnPath(state.box) -}}{%- endfor -%}
          {%- endmacro -%}
          {%- set relevantPeople = getPeopleOnPath()|length -%}
          {%- set otherPeople = state_attr('image_processing.doods_front_camera_snapshot','summary').person - relevantPeople -%}
        {%- endif -%}

        {#- total up the things into different categories -#}
        {%- set importantThings = otherCars + otherTrucks + totalMotorcycles + totalBicycles + relevantPeople -%}
        {%- set otherThings = parkedCars + parkedTrucks + otherPeople -%}

        {#- Now produce the message -#}
        There was motion at the front at {{ as_timestamp(states.input_boolean.front_camera_motion.last_updated)|timestamp_custom('%F %T', True) }}.
        {%- if importantThings > 0 %}
          There were {{ importantThings }} things that matter detected, these were:
          {%- if relevantPeople > 0 %}
            {{ relevantPeople }} people on the path ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').person %}{% if personOnPath(state.box) %}{{ state.score|round(0) }}% confidence at {{state.box}}{%- if loop.last %}{% else %}, {% endif %}{% endif %}{% endfor %})
          {% endif %}
          {%- if otherCars > 0 %}
            {{otherCars}} cars
            ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').car %}{% if not isParked(state.box) %}{{ state.score|round(0) }}% confidence at {{state.box}}){%- if loop.last %}{% else %}, {% endif %}{% endif %}{% endfor %}
          {% endif %}
          {%- if otherTrucks > 0 %}
            {{otherTrucks}} trucks
            ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').truck %}{% if not isParked(state.box) %}{{ state.score|round(0) }}% confidence at {{state.box}}){%- if loop.last %}{% else %}, {% endif %}{% endif %}{% endfor %}
          {% endif %}
          {%- if totalMotorcycles > 0 %}
            {{ state_attr('image_processing.doods_front_camera_snapshot','summary').motorcycle }} motorcycle(s) ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').motorcycle %} {{ state.score|round(0) }}% confidence at {{state.box}}{%- if loop.last %}{% else %}, {%endif %}{% endfor %})
          {% endif %}
          {%- if totalBicycles > 0 %}
            {{ state_attr('image_processing.doods_front_camera_snapshot','summary').bicycle }} bicycle(s) ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').bicycle %}{{ state.score|round(0) }}% confidence at {{state.box}}{%- if loop.last %}{% else %}, {% endif %}{% endfor %})
          {% endif %}
        {% else %}
          We saw nothing of importance.
        {% endif -%}
        {%- if otherThings > 0 %}
          There were {{ otherThings }} things that probably don't matter detected, these were:
          {%- if parkedVehicles > 0 %}
            {{parkedVehicles}} parked vehicles
            {%- if parkedCars > 0 %}
              ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').car %}{% if isParked(state.box) %}car {{ state.score|round(0) }}% confidence at {{state.box}}){%- if loop.last %}{% else %}, {% endif %}{% endif %}{% endfor %}
            {%- endif -%}
            {%- if parkedTrucks > 0 %}
              ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').truck %}{% if isParked(state.box) %}truck {{ state.score|round(0) }}% confidence at {{state.box}}){%- if loop.last %}{% else %}, {% endif %}{% endif %}{% endfor %}
            {%- endif -%}
          {%- endif -%}
          {%- if otherPeople > 0 %}
            {{otherPeople}} people on the road
            ({%- for state in state_attr('image_processing.doods_front_camera_snapshot','matches').person %}{% if not personOnPath(state.box) %}{{ state.score|round(0) }}% confidence at {{state.box}}){%- if loop.last %}{% else %}, {% endif %}{% endif %}{% endfor %}
          {%- endif -%}
        {%- endif -%}
      target: >-
        {% if is_state('input_boolean.front_camera_motion_interesting','on') %}
          !secret discord_camera_channel
        {% else %}
          !secret discord_camera_false_channel
        {% endif %}
      data:
        images:
        - "/data/homeassistant/cameras/front_camera_snapshot.jpg"
        - "/data/homeassistant/cameras/front_camera_snapshot_latest.jpg"
  - condition: state
    entity_id: input_boolean.front_camera_motion_interesting
    state: 'on'
  - delay: '00:01:00'
  - service: input_boolean.turn_off
    entity_id: 
      - input_boolean.stream_camera
      - input_boolean.front_camera_motion_interesting
